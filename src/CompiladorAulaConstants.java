/* Generated By:JavaCC: Do not edit this line. CompiladorAulaConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CompiladorAulaConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CREATEWORLD = 5;
  /** RegularExpression Id. */
  int OVERWORLD = 6;
  /** RegularExpression Id. */
  int BEDROCK = 7;
  /** RegularExpression Id. */
  int TIPOINTEIRO = 8;
  /** RegularExpression Id. */
  int TIPOFLUTUANTE = 9;
  /** RegularExpression Id. */
  int TIPOTEXTO = 10;
  /** RegularExpression Id. */
  int TIPOGRAVETO = 11;
  /** RegularExpression Id. */
  int TIPODIAMANTE = 12;
  /** RegularExpression Id. */
  int TIPOBINARIO = 13;
  /** RegularExpression Id. */
  int IF = 14;
  /** RegularExpression Id. */
  int THEN = 15;
  /** RegularExpression Id. */
  int ELSE = 16;
  /** RegularExpression Id. */
  int TRUE = 17;
  /** RegularExpression Id. */
  int FALSE = 18;
  /** RegularExpression Id. */
  int AND = 19;
  /** RegularExpression Id. */
  int OR = 20;
  /** RegularExpression Id. */
  int NOT = 21;
  /** RegularExpression Id. */
  int ABRIRELSE = 22;
  /** RegularExpression Id. */
  int FECHARELSE = 23;
  /** RegularExpression Id. */
  int ABRIRIF = 24;
  /** RegularExpression Id. */
  int FECHARIF = 25;
  /** RegularExpression Id. */
  int WHILE = 26;
  /** RegularExpression Id. */
  int ABRIRWHILE = 27;
  /** RegularExpression Id. */
  int FECHARWHILE = 28;
  /** RegularExpression Id. */
  int BREAK = 29;
  /** RegularExpression Id. */
  int SOMA = 30;
  /** RegularExpression Id. */
  int SUBTRACAO = 31;
  /** RegularExpression Id. */
  int MULTIPLICACAO = 32;
  /** RegularExpression Id. */
  int DIVISAO = 33;
  /** RegularExpression Id. */
  int ATRIBUICAO = 34;
  /** RegularExpression Id. */
  int MAIOR = 35;
  /** RegularExpression Id. */
  int MENOR = 36;
  /** RegularExpression Id. */
  int MENOR_IGUAL = 37;
  /** RegularExpression Id. */
  int MAIOR_IGUAL = 38;
  /** RegularExpression Id. */
  int DIFERENTE = 39;
  /** RegularExpression Id. */
  int IGUAL = 40;
  /** RegularExpression Id. */
  int DECIMAL = 41;
  /** RegularExpression Id. */
  int DIGITO = 42;
  /** RegularExpression Id. */
  int ID = 43;
  /** RegularExpression Id. */
  int LETRA = 44;
  /** RegularExpression Id. */
  int PONTOVIRGULA = 45;
  /** RegularExpression Id. */
  int VIRGULA = 46;
  /** RegularExpression Id. */
  int STRING = 47;
  /** RegularExpression Id. */
  int PARENTES_ESQUERDA = 48;
  /** RegularExpression Id. */
  int PARENTES_DIREITA = 49;
  /** RegularExpression Id. */
  int DELIMITAR_VARCHAR = 50;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"createworld\"",
    "\"overworld\"",
    "\"bedrock\"",
    "\"pedra\"",
    "\"agua\"",
    "\"placa\"",
    "\"graveto\"",
    "\"diamante\"",
    "\"redstone\"",
    "\"vinicius13\"",
    "\"build\"",
    "\"monark\"",
    "\"tocha_acessa\"",
    "\"tocha_apagada\"",
    "\"repetidor\"",
    "\"or\"",
    "\"tocha_invertida\"",
    "\"acordaaaa_gente\"",
    "\"ja_tamo_na_ditadura\"",
    "\"abririf\"",
    "\"fecharif\"",
    "\"em_busca_da_casa_automatica\"",
    "\"abrirwhile\"",
    "\"fecharwhile\"",
    "\"instakill\"",
    "\"combine\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"<-\"",
    "\"stronger\"",
    "\"weaker\"",
    "\"<=\"",
    "\">=\"",
    "\"<>\"",
    "\"=\"",
    "<DECIMAL>",
    "<DIGITO>",
    "<ID>",
    "<LETRA>",
    "\";\"",
    "\",\"",
    "<STRING>",
    "\"(\"",
    "\")\"",
    "\"\\\'\"",
  };

}
